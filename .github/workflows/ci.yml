name: Artifact CI

on:
  push:

env:
  JAVA_VERSION: 19

jobs:
  build_bot_artifacts:
    name: Build Discord Bot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      - name: Build plugin
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assembleBot
      - name: Upload plugin artifact
        uses: actions/upload-artifact@v3
        with:
          name: plugin
          path: bot/build/plugin/*.zip
      - name: Upload plugin bot
        uses: actions/upload-artifact@v3
        with:
          name: bot
          path: bot/build/bot/*.zip
  build_desktop_app:
    name: Build Desktop App
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{env.JAVA_VERSION}}
      - name: Build App Distribution
        uses: gradle/gradle-build-action@v2
        with:
          arguments: packageReleaseDistributionForCurrentOS
      - name: Setup MSbuild
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.3.1
      - name: Create Code Signing Certificate
        if: matrix.os == 'windows-latest'
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.WINDOWS_CERTIFICATE }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx
      - name: Code Sign 2021
        if: matrix.os == 'windows-latest'
        run: |
          & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /f certificate\certificate.pfx /p '${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}' /t http://timestamp.sectigo.com/ /d Tonbrett app/desktop/build/compose/binaries/main-release/msi/*.msi
      - name: Upload distributions
        uses: actions/upload-artifact@v3
        with:
          name: desktopapp-${{ matrix.os }}
          path: |
            app/desktop/build/compose/binaries/main-release/deb/*.deb
            app/desktop/build/compose/binaries/main-release/msi/*.msi
            app/desktop/build/compose/binaries/main-release/dmg/*.dmg
  create_release:
    name: Create Release
    runs-on: windows-latest
    needs: [build_bot_artifacts, build_desktop_app]
    steps:
      - uses: actions/download-artifact@v3
        name: Download Artifacts from Ubuntu
        with:
          name: desktopapp-ubuntu-latest
      - uses: actions/download-artifact@v3
        name: Download Artifacts from MacOS
        with:
          name: desktopapp-macos-latest
      - uses: actions/download-artifact@v3
        name: Download Artifacts from Windows
        with:
          name: desktopapp-windows-latest
      - uses: actions/download-artifact@v3
        name: Download Bot
        with:
          name: bot
      - uses: actions/download-artifact@v3
        name: Download Plugin
        with:
          name: bot
      - run: ls
